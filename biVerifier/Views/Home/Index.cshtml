@model List<biVerifier.Models.AggregatedSalesData>

@{
    ViewData["Title"] = "Dashboard";
    int siteCount = ViewData["SiteCount"] != null ? (int)ViewData["SiteCount"] : 0;
    int cancellationCount = ViewData["CancellationCount"] != null ? (int)ViewData["CancellationCount"] : 0;
    List<string> cancellationReasons = ViewData["CancellationReasons"] as List<string>;
    List<decimal> revenueLost = ViewData["RevenueLost"] as List<decimal>;
    Dictionary<string, int> leadSourceCounts = ViewData["LeadSourceCounts"] as Dictionary<string, int>;
    List<decimal> totalRevenueList = ViewData["TotalRevenue"] as List<decimal>;
}

<div class="custom-container" style="margin: 3rem">
    <div class="col-md-8">
        <div class="row">
            <div class="col-md-6">
                <div class="box">
                    <div class="box-header">
                        <h5 style="font-weight: bold">SALE BY PERSON</h5>
                    </div>
                    <div class="box-body">
                        <div id="barChart" style="height: 350px;"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="box">
                    <div class="box-header">
                        <h5 style="font-weight: bold">REVENUE LOST PER CANCELLATION</h5>
                    </div>
                    <div class="box-body">
                        <div id="lineChart" style="height: 350px;"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <!-- Sales by Region Chart Section -->
                @section SalesByRegionChart {
                    <div class="box">
                        <div class="box-header">
                            <h5 style="font-weight: bold">SALES BY REGION</h5>
                        </div>
                        <div class="box-body">
                            <div id="salesByRegionChart" style="height: 350px;"></div>
                        </div>
                    </div>
                }


                 @section ClientCountByLeadSourceChart {
                    <div class="box">
                        <div class="box-header">
                            <h5 style="font-weight: bold">CLIENT COUNT BY LEAD SOURCE</h5>
                        </div>
                        <div class="box-body">
                              <canvas id="clientCountByLeadSourceChartCanvas" style="height: 350px;"></canvas>
                        </div>
                    </div>
                 }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Render the Bar Chart for Aggregated Sales Consultant
        var consultantNames = [];
        var totalSalesData = [];
        @foreach (var salesData in Model)
        {
            <text>consultantNames.push('@(salesData?.ConsultantName ?? "N/A")');</text>
            <text>totalSalesData.push(@(salesData?.TotalSales ?? 0));</text>
        }

        var barChartData = {
            chart: {
                type: 'bar',
                height: 350
            },
            series: [{
                name: 'Total Sales',
                data: totalSalesData
            }],
            xaxis: {
                categories: consultantNames
            }
        };

        var barChartOptions = {
            chart: {
                toolbar: {
                    show: false
                }
            }
        };

        var barChart = new ApexCharts(document.getElementById('barChart'), barChartData);
        barChart.render();

        // Render the Line Chart for Revenue Lost per Cancellation
        var cancellationReasons = @Html.Raw(Json.Serialize(cancellationReasons));
        var revenueLost = @Html.Raw(Json.Serialize(revenueLost));

        var lineChartData = {
            chart: {
                type: 'bar',
                height: 350
            },
            series: [{
                name: 'Revenue Lost',
                data: revenueLost
            }],
            xaxis: {
                categories: cancellationReasons
            }
        };

        var lineChartOptions = {
            chart: {
                toolbar: {
                    show: false
                }
            }
        };

        var lineChart = new ApexCharts(document.getElementById('lineChart'), lineChartData);
        lineChart.render();

        // Render the Pie Chart for Sales Lead Source
        var leadSourceCounts = @Html.Raw(Json.Serialize(leadSourceCounts));

        var pieChartOptions = {
            chart: {
                type: 'pie',
                height: 350
            },
            series: Object.values(leadSourceCounts),
            labels: Object.keys(leadSourceCounts),
            colors: ['#3e82f7', '#04d672', '#fa8b0c', '#ec4a3f', '#9050c6']
        };

        var pieChart = new ApexCharts(document.getElementById('pieChart'), pieChartOptions);
        pieChart.render();

        // Retrieve data from ViewData for Sales by Region Chart
        var provinces = @Html.Raw(Json.Serialize(ViewData["Provinces"]));
        var clientCounts = @Html.Raw(Json.Serialize(ViewData["ClientCounts"]));

        // Prepare data for the Sales by Region Chart
        var salesByRegionChartData = {
            chart: {
                type: 'bar',
                height: 350
            },
            series: [{
                name: 'Number of Clients',
                data: clientCounts
            }],
            xaxis: {
                categories: provinces
            }
        };

        // Render the Sales by Region Chart
        var salesByRegionChart = new ApexCharts(document.getElementById('salesByRegionChart'), salesByRegionChartData);
        salesByRegionChart.render();





        // Prepare data for the Client Count by Lead Source Chart
    var leadSourceCounts = @Html.Raw(Json.Serialize(ViewData["LeadSourceCounts"]));
    var leadSources = Object.keys(leadSourceCounts);
    var clientCounts = Object.values(leadSourceCounts);

    var ctx = document.getElementById('clientCountByLeadSourceChartCanvas').getContext('2d');
    var clientCountByLeadSourceChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: leadSources,
            datasets: [{
                label: 'Client Count',
                data: clientCounts,
                backgroundColor: '#26A0FC',
                borderColor: '#26A0FC',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
    </script>
}
